<UserControl x:Class="ParkingManagement.Forms.Transaction.ucParkingOutWithoutSlip"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ParkingManagement.Library"
             xmlns:Ctrl="clr-namespace:ParkingManagement.Library.Controls"
             xmlns:helper ="clr-namespace:ParkingManagement.Library.Helpers"
             xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="768" d:DesignWidth="1024">
    <UserControl.InputBindings>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}"/>
        <KeyBinding Key="Z" Modifiers="Control" Command="{Binding UndoCommand}"/>
    </UserControl.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="210"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Border Style="{StaticResource PlainBackground}">
            <Border.Resources>
                <Style TargetType="Label">
                    <Setter Property="FontSize" Value="28"/>
                    <Setter Property="Width" Value="150"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
            </Border.Resources>
            <StackPanel  Orientation="Horizontal" VerticalAlignment="Center">
                <Label Content="Date : "></Label>
                <Label Content="{Binding CurDate,StringFormat={}{0:MM/dd/yyyy}}"/>

                <Label Content="Time : " Margin="200,0,0,0"></Label>
                <Label Content="{Binding CurTime}"/>
            </StackPanel>
        </Border>
        <Border Style="{StaticResource PlainBackground}" Grid.Row="1" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120"/>
                    <ColumnDefinition Width="25"/>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="70"/>
                </Grid.ColumnDefinitions>
                <Label Content="Invoice No" FontSize="14" FontWeight="SemiBold"/>
                <TextBox Text="{Binding InvoicePrefix}" Grid.Column="1" IsReadOnly="True" Background="GhostWhite" ></TextBox>
                <Ctrl:ExtendedTextBox x:Name="txtInvoice" Text="{Binding InvoiceNo}" Grid.Column="2" Height="28" Style="{StaticResource InputTextBox}" helper:CustomFocusManager.IsFocused="{Binding FocusedElement, Converter={StaticResource ShortToBool}, ConverterParameter='5'}" IsEnabled="{Binding EntryPanelEnabled, Converter={StaticResource ReverseBool}}">
                    <Ctrl:ExtendedTextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding LoadInvoice}" CommandParameter="{Binding Path=Text,RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}"/>
                    </Ctrl:ExtendedTextBox.InputBindings>
                </Ctrl:ExtendedTextBox>

                <ToggleButton Grid.Column="4" Margin="5" IsChecked="{Binding TaxInvoice}" IsEnabled="{Binding CanChangeInvoiceType}" Visibility="Collapsed">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border BorderBrush="Blue" BorderThickness="2" CornerRadius="2" Background="White" >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="Blue"  Background="Blue" x:Name="ATI">
                                        <TextBlock x:Name="txtATI" Text="Abb. Tax Invoice" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="SemiBold"/>
                                    </Border>
                                    <Border BorderBrush="Blue" Grid.Column="1" Background="White" x:Name="TI">
                                        <TextBlock x:Name="txtTI" Text="Tax Invoice" Foreground="Blue" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="SemiBold"/>
                                    </Border>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" TargetName="ATI" Value="White"/>
                                    <Setter Property="Background" TargetName="TI" Value="Blue"/>
                                    <Setter Property="Foreground" TargetName="txtATI" Value="Blue"/>
                                    <Setter Property="Foreground" TargetName="txtTI" Value="White"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                    <ToggleButton.Triggers>

                    </ToggleButton.Triggers>
                </ToggleButton>

                <Button Style="{StaticResource NewButton}" Width="65" Content="New" Grid.Column="5" Command="{Binding NewCommand}" IsEnabled="{Binding NewEnabled}"/>
                <Button Style="{StaticResource NewButton}" Width="65" Content="Save" Grid.Column="6" Command="{Binding SaveCommand}" IsEnabled="{Binding SaveEnabled}"/>
                <Button Style="{StaticResource NewButton}" Width="65" Content="Print" Grid.Column="7" Command="{Binding PrintCommand}" IsEnabled="{Binding PrintEnabled}"/>
                <Button Content="Clear" Style="{StaticResource NewButton}" Width="65" Grid.Column="8" Command="{Binding UndoCommand}"/>
            </Grid>

        </Border>


        <Border Style="{StaticResource PlainBackground}" Grid.Row="2" x:Name="border" Padding="5" IsEnabled="{Binding EntryPanelEnabled}">
            <Border.Resources>
                <Style TargetType="Label">
                    <Setter Property="VerticalAlignment" Value="Top"/>
                    <Setter Property="Margin" Value="2 5 0 0"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="Height" Value="32"/>
                </Style>
            </Border.Resources>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="400"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Border Style="{StaticResource PlainBackground}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="80"/>
                            <RowDefinition Height="40"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition />
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Received From"/>
                        <TextBox Grid.Column="1" Text="{Binding POUT.BILLTO}"  GotFocus="TextBox_GotFocus" ></TextBox>
                        <Label Content="Address" Grid.Row="1" Margin="2 5 0 0" VerticalAlignment="Top" />
                        <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding POUT.BILLTOADD}" Height="70" GotFocus="TextBox_GotFocus" TextWrapping="WrapWithOverflow" ></TextBox>
                        <Label Content="PAN" Grid.Row="2"/>
                        <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding POUT.BILLTOPAN}"  GotFocus="TextBox_GotFocus" PreviewTextInput="TextBox_PreviewTextInput" ></TextBox>

                    </Grid>
                </Border>
                <Border Style="{StaticResource PlainBackground}" Grid.Column="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="200"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="50"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="60"/>
                        </Grid.RowDefinitions>
                        <Label Content="Entrance Type" />
                        <ComboBox ItemsSource="{Binding VTypeList}" DisplayMemberPath="Description" SelectedValuePath="VTypeID" SelectedValue="{Binding PIN.VehicleType}" Grid.Column="1" Height="30" HorizontalContentAlignment="Center"  FontSize="14"></ComboBox>

                        <Label Grid.Column="3" Content="{Binding Converter={StaticResource LabelConverter}, ConverterParameter='Plate No'}"/>
                        <TextBox Grid.Column="4" Text="{Binding PIN.PlateNo}" IsEnabled="{Binding AmountEnabled}" ></TextBox>

                        <Label Grid.Row="1" Content="InDate"/>
                        <DatePicker Grid.Row="1" Width="150" Height="30" HorizontalAlignment="Left"  SelectedDate="{Binding InDate}" Margin="99,7,0,7" Grid.ColumnSpan="2">
                            <DatePicker.Resources>
                                <Style TargetType="Button">
                                    <Setter Property="Height" Value="26"/>
                                </Style>
                            </DatePicker.Resources>
                        </DatePicker>


                        <Label Grid.Row="2" Content="InTime"/>
                        <StackPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="0" VerticalAlignment="Center">
                            <toolkit:TimePicker Value="{Binding InTime}"  Width="150" Height="30" HorizontalAlignment="Left"/>
                            <Button Style="{StaticResource NewButton}" Content="Calculate" Width="80" Margin="0" Command="{Binding LoadData}" />
                        </StackPanel>

                        <Label Grid.Row="4" Content="Remarks"/>
                        <TextBox Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="5" Height="60" TextWrapping="WrapWithOverflow" Text="{Binding POUT.Remarks, UpdateSourceTrigger=PropertyChanged}" GotFocus="TextBox_GotFocus" ></TextBox>
                    </Grid>
                </Border>
            </Grid>
        </Border>
        <Border Style="{StaticResource PlainBackground}" Grid.Row="4">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="Label">
                        <Setter Property="Width" Value="120"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <!--<ColumnDefinition/>-->
                </Grid.ColumnDefinitions>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="In Details " FontSize="18" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <StackPanel Grid.Row="1">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Entrance Type"></Label>
                                <TextBlock Text=":"/>
                                <Label Content="{Binding PIN.VType.Description}" Width="200"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" >
                                <Label Content="{Binding Converter={StaticResource LabelConverter}, ConverterParameter='Plate No'}"></Label>
                                <TextBlock Text=":"/>
                                <Label Content="{Binding PIN.PlateNo}" Width="200"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <Label Content="In Date"></Label>
                                <TextBlock Text=":"/>
                                <TextBlock Text="{Binding PIN.InDate, StringFormat={}{0:MM/dd/yyyy}}" Margin="5 0 0 0"/>
                                <TextBlock Text="{Binding PIN.InMiti, StringFormat=({0:})}" Margin="5 0 0 0"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="In Time" ></Label>
                                <TextBlock Text=":"/>
                                <Label Content="{Binding PIN.InTime}"/>
                            </StackPanel>
                            <!--<StackPanel Orientation="Horizontal">
                            <Label Content="Interval"></Label>
                            <TextBlock VerticalAlignment="Center" FontWeight="Bold" Text="{Binding POUT.Interval}"/>
                        </StackPanel>-->
                        </StackPanel>
                    </Grid>

                    <Line Grid.Row="1" X1="10" Y1="0" X2="1000" Y2="0" Stroke="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Out Details " FontSize="18" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <StackPanel Grid.Row="1">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Out Date"></Label>
                                <TextBlock Text=":"/>
                                <TextBlock Text="{Binding POUT.OutDate, StringFormat={}{0:MM/dd/yyyy}}" Margin="5 0 0 0"/>
                                <TextBlock Text="{Binding POUT.OutMiti, StringFormat= ({0:})}" Margin="5 0 0 0"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Out Time" ></Label>
                                <TextBlock Text=":"/>
                                <Label Content="{Binding POUT.OutTime}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Interval"></Label>
                                <TextBlock Text=":"/>
                                <Label Content="{Binding POUT.Interval}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Grid>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition/>
                        <RowDefinition Height="60"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Payment Details " FontSize="18" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <StackPanel Grid.Row="1">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Charged Hours"></Label>
                            <TextBlock Text=":"/>
                            <Label Content="{Binding POUT.ChargedHours}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Charged Amount"></Label>
                            <TextBox Width="150" IsReadOnly="True" IsTabStop="False" FontSize="14" Text="{Binding POUT.ChargedAmount, StringFormat={}{0:#0.00}}" HorizontalContentAlignment="Right"/>
                        </StackPanel>
                        <StackPanel>
                            <TextBlock FontWeight="Normal" HorizontalAlignment="Left" Text="Bill amount has exceeded Abbreviatated Tax Invoice limit.&#x0a;Please contact administration." Visibility="{Binding TaxInvoice, Converter={StaticResource BoolToVisibility}}"  ></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Visibility="{x:Static local:GlobalClass.DisableCashAmountChange}" >
                            <Label VerticalAlignment="Center" Content="Cash Amount" ></Label>
                            <!--IsReadOnly="{x:Static Lib:GlobalClass.DisableCashAmountChange}"-->
                            <Ctrl:ExtendedTextBox FontSize="14"  HorizontalContentAlignment="Right" Text="{Binding POUT.CashAmount, StringFormat={}{0:#0.00}}" 
                                                  helper:CustomFocusManager.IsFocused="{Binding Path = FocusedElement, Converter={StaticResource ShortToBool}, ConverterParameter='1'}"
                                                  Width="190" Style="{StaticResource InputTextBox}"/>
                        </StackPanel>
                        <!--<StackPanel Orientation="Horizontal">
                            <Label Content="Royalty Amount"></Label>
                            <TextBox IsReadOnly="True" IsTabStop="False" FontSize="14"  HorizontalContentAlignment="Right" Text="{Binding POUT.RoyaltyAmount, StringFormat={}{0:#0.00}}" Width="150"/>
                        </StackPanel>-->

                        <!--<GroupBox Header="Payment Option" Margin="10" Height="100">
                            <StackPanel Orientation="Horizontal">
                                <Button Content="Cash" Style="{StaticResource NewButton}" Width="80" Height="55" IsEnabled="False"/>
                                <Button Content="Member" Style="{StaticResource NewButton}" Width="80" Height="55" IsEnabled="False"/>
                            </StackPanel>
                        </GroupBox>-->
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Right"/>

                </Grid>

                <Grid Grid.Column="2" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Member Info" FontSize="18" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <StackPanel Grid.Row="1">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Member Id"></Label>
                            <TextBlock Text=":"/>
                            <Label Content="{Binding POUT.MemDetails.MemberId}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Member Name"></Label>
                            <TextBlock Text=":"/>
                            <Label Content="{Binding POUT.MemDetails.MemberName}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label VerticalAlignment="Center" Content="Rate Name" ></Label>
                            <TextBlock Text=":"/>
                            <Label Content="{Binding POUT.Rate.RateDescription}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label VerticalAlignment="Center" Content="Payment Voucher" ></Label>
                            <TextBlock Text=":"/>
                            <Label Content="{Binding POUT.MemDetails.VCHRNO}"/>
                        </StackPanel>
                    </StackPanel>

                </Grid>
                <Line Grid.Column="1" X1="0" Y1="10" X2="0" Y2="1000" Stroke="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
                <Line  Grid.Column="1" X1="0" Y1="10" X2="0" Y2="1000" Stroke="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
            </Grid>
        </Border>
    </Grid>
</UserControl>
